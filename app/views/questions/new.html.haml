/ %h1 Question#NEW
/ = javascript_include_tag "compteur"
- content_for :head do
  = javascript_include_tag 'compteur'
.container
  .row
    .col-sm-10
      %h2= @decision_tree.title_decision_tree

      / = @decision_tree.title_decision_trees
    
    - if current_user.is? :ADMIN
      .col-sm-1
        = button_to 'Modifier le nom arbre décision',edit_decision_tree_path(@decision_tree), class: "btn btn btn-primary", :method => :get

    %br
      .col-sm-10
      .col-sm-1
        = button_to 'Consulter les arbres de décisions',decision_trees_path, class: "btn btn btn-primary", :method => :get
    %br
    .col-sm-10
    .col-sm-2
      Temps écoulé : 
      %input#Compteur.modification{:name => "TempsAction",:onload => "load()", :style => "width:95px;", :type => "text", :value => "00 : 00 : 00",disabled: true}
/ = @decision_tree.id

/ -------------------------------------------------------------------------------------------------------------------
/ ---------------------------------------Explication algorythmique --------------------------------------------------
/ -------------------------------------------------------------------------------------------------------------------
/ Pour afficher toutes les questions dans la partie administrateur, on va commencer par parcourir toutes les questions YES Tant qu'elles possèdent un id_route_yes (soit tant qu'elles possèdent une réponse). A chaque affichage de question, on va enregistrer l'ID de la question dans un tableau @@arr. Ce qui nous permettra de savoir quelles questions ont déjà été affichée. On testera a chaque fois avant d'afficher une question si elle est déjà présente dans le tableau, dans le cas contraire on pourra afficher la question, sinon on remonte a la question précédente.
/ Une fois la dernière question YES trouvée, on va remonté a la question précédente (rechercher dans toute les questions celle qui a l'id_route_yes de la derniere question) puis on va Fill sont id_route_no. 
/ Après la question NO affichée, on va remonté 2 fois dans les questions mère, puis on va fill l'id route no. On va répéter cela jusqu'à arriver a la première question (question_first). ATTENTION : SI les questions NO possèdent une réponse on va les Fill et les afficher
/ Puis on passe a la partie NO, en faisant un Fill du NO de la question first, et en répétant ainsi le même déroulement que précédemment.

/La suppression d'une question entraine la suppression des réponse YES et NO qui lui sont associé (Si on supprime le YES; le NO va etre supprimer aussi)



//-------------------------------------------------- PARTIE ADMIN --------------------------------------------------
- if current_user.is? :ADMIN
  .container
    .row
      .col-md-8
        / Création du tableau @@arr
        - @@arr = Array.new   
        - puts @question_first.to_yaml      
        - if !@question_first.nil?
          / on affiche la 1ere question
          = label_tag "Titre Question :" 
          = @question_first.title_question
          / on enregistre la question dans le tableau @@arr
          - @@arr << @question_first.id
          %br
          = link_to 'modifier question', edit_decision_tree_question_path(@decision_tree,@question_first.id)
          - @@question_next_yes = Question.find_by id: @question_first.id_route_yes
          - @@question_next_no =  Question.find_by id: @question_first.id_route_no
          - @@margin = 10
          />>>>>>>>>> Premier While Question_next_YES <<<<<<<<<<
          - while @@question_next_yes.id_route_yes?
            - if @@question_next_yes.id_route_yes?
              - if @@question_next_yes.title_question != @question_first.title_question
                - @@margin = @@margin + 40
                = render "affiche_questions_yes" 
                - @@question_next_yes = Question.find_by id: @@question_next_yes.id_route_yes

          - @@margin = @@margin + 40 
          = render "affiche_questions_yes_2"
          = render "affiche_questions_yes_3"  

          - bool_yes = true
          / tant que la question n'est pas la 1er question et que c'est une question YES
          - while @@question_next_yes.id != @question_first.id && bool_yes == true
            / SI la question possède une réponse
            - if @@question_next_yes.id_route_no?
              / Si la question n'est pas déjà dans le tableau
              - if !@@arr.include?(@@question_next_yes.id_route_no)
                - @@question_next_yes = Question.find_by id: @@question_next_yes.id_route_no
                / Si la question possède une réponse
                - if @@question_next_yes.id_route_yes?
                  - while @@question_next_yes.id_route_yes?
                    - if @@question_next_yes.id_route_yes?
                      - @@margin = @@margin + 40
                      = render "affiche_questions_yes"
                      - @@question_next_yes = Question.find_by id: @@question_next_yes.id_route_yes

                - @@margin = @@margin + 40
                = render "affiche_questions_yes_3"  
              - else
                - if @@question_next_yes.question_yes == true
                  - @@question_next_yes = Question.find_by id_route_yes: @@question_next_yes.id
                - else
                  - @@question_next_yes = Question.find_by id_route_no: @@question_next_yes.id
                - @@margin = @@margin - 40
            - else
              - bool_yes = false

          />>>>>>>>>> Deuxieme While Question_next_NO <<<<<<<<<<
          - if !@@question_next_no.id.nil?
            - while @@question_next_no.id_route_yes?
              - if @@question_next_no.id_route_yes?
                - if @@question_next_no.title_question != @question_first.title_question
                  - @@margin = @@margin + 40
                  = render "affiche_questions_no"
                  - @@question_next_no = Question.find_by id: @@question_next_no.id_route_yes
            - @@margin = @@margin + 40
            = render "affiche_questions_no_2"    
            = render "affiche_questions_no_3"      
            - puts @@question_next_no.to_yaml

            - bool_no = true
            - while @@question_next_no.id != @question_first.id && bool_no == true
              - puts @@question_next_no.to_yaml
              - if @@question_next_no.id_route_no?
                - if !@@arr.include?(@@question_next_no.id_route_no)
                  - @@question_next_no = Question.find_by id: @@question_next_no.id_route_no
                  - if @@question_next_no.id_route_yes?
                    - while @@question_next_no.id_route_yes?
                      - if @@question_next_no.id_route_yes?
                        - @@margin = @@margin + 40
                        = render "affiche_questions_no"
                        - @@question_next_no = Question.find_by id: @@question_next_no.id_route_yes

                  - @@margin = @@margin + 40
                  = render "affiche_questions_no_3"  
                - else
                  - if @@question_next_no.question_yes == true
                    - @@question_next_no = Question.find_by id_route_yes: @@question_next_no.id
                  - else
                    - @@question_next_no = Question.find_by id_route_no: @@question_next_no.id 
                  - @@margin = @@margin - 40
              - else
                - bool_no = false
        

      / Si l'arbre n'a pas encore de question on va créer la 1ere avec ses 2 réponses 
      - if @decision_tree.questions.count < 1
        .col-md-4
          %h4 Nom de la question Question
          = form_tag [@decision_tree, @question] do |f|
            = label_tag "Question :"
            %br
            = text_field_tag  :title_question, nil, :size => 55
            %br
            = label_tag "YES :"
            %br
            = hidden_field_tag :question_yes, :value => true
            = text_field_tag  :title_questions_yes, nil, :size => 55
            %br
            = label_tag "NO :"
            %br
            = hidden_field_tag :question_no, :value => false
            = text_field_tag  :title_questions_no, nil, :size => 55
            %br
            = submit_tag "Valider" , class: "btn btn btn-primary" 
- else
  //-------------------------------------------------- PARTIE HL1/2 --------------------------------------------------
  / A chaque clic, on va éxécuté la fonction TITI , (cf assets/javascript/question.js)

  - if !@question_first.nil?
    = label_tag "Titre Question :" 
    = @question_first.title_question

    %br

    - cpt = 0 
    - @@question_next_yes = @question_first
    - @@question_next_no = @question_first
    - @margin = 10
    
    = button_tag "YES", class: "btn btn-primary", value: @question_first.id_route_yes, id: @@question_next_yes.id, :onclick => "titi(#{@decision_tree.id},#{@@question_next_yes.id},'yes',0,10,0)"
    %div{id: "YESS0"}
    
    = button_tag "NON", class: "btn btn-primary", value: @@question_next_no.id_route_yes, id: @@question_next_no.id_route_no, :onclick => "titi(#{@decision_tree.id},#{@@question_next_no.id},'no',0,10,0)"

    %div{id: "NO0"}

    
